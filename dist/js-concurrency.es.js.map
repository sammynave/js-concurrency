{"version":3,"file":"js-concurrency.es.js","sources":["../src/index.js"],"sourcesContent":["const task = (genFn) => {\n  return {\n    perform() {\n      const itr = genFn();\n\n      /*\n       * TODO: might not want to use recursion\n       * benchmark this at some point\n       */\n      const run = (arg) => {\n        let result = itr.next(arg);\n\n        return result.done\n          ? result.value\n          : Promise.resolve(result.value).then(run);\n      }\n\n      return run();\n    }\n  }\n}\n\nexport {\n  task\n}\n"],"names":["task","genFn","[object Object]","itr","run","arg","result","next","done","value","Promise","resolve","then"],"mappings":"AAAK,MAACA,EAAQC,IACL,CACLC,UACE,MAAMC,EAAMF,IAMNG,EAAOC,IACX,IAAIC,EAASH,EAAII,KAAKF,GAEtB,OAAOC,EAAOE,KACVF,EAAOG,MACPC,QAAQC,QAAQL,EAAOG,OAAOG,KAAKR,IAGzC,OAAOA"}